name: Basic Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: marvel_db
          MYSQL_USER: marvel_user
          MYSQL_PASSWORD: marvel_password
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: 🗄️ Wait for MySQL
      run: |
        until mysqladmin ping -h "127.0.0.1" --silent; do
          echo 'Waiting for MySQL to be ready...'
          sleep 2
        done
        echo 'MySQL is ready!'

    - name: 🔍 Verify MySQL connection
      run: |
        mysql -h 127.0.0.1 -u marvel_user -pmarvel_password -e "SELECT 'Connection successful' as status;"

    - name: 🧪 Run tests
      run: ./mvnw clean test
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/marvel_db
        SPRING_DATASOURCE_USERNAME: marvel_user
        SPRING_DATASOURCE_PASSWORD: marvel_password

    - name: 🔨 Build application
      run: ./mvnw clean compile

    - name: 📦 Package application
      run: ./mvnw clean package -DskipTests

    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

    - name: 📦 Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: marvel-api-jar
        path: target/*.jar

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔍 Test Docker Compose
      run: |
        docker-compose config
        echo "✅ Docker Compose configuration is valid"